<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github pages | matti's home]]></title>
  <link href="http://sudolee.github.io/blog/categories/github-pages/atom.xml" rel="self"/>
  <link href="http://sudolee.github.io/"/>
  <updated>2014-04-23T01:28:52+08:00</updated>
  <id>http://sudolee.github.io/</id>
  <author>
    <name><![CDATA[Matti Lee]]></name>
    <email><![CDATA[desoxydate@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用GithubPages和octopress部署blog]]></title>
    <link href="http://sudolee.github.io/blog/2014/04/20/setup-githubpages-via-octopress/"/>
    <updated>2014-04-20T16:35:14+08:00</updated>
    <id>http://sudolee.github.io/blog/2014/04/20/setup-githubpages-via-octopress</id>
    <content type="html"><![CDATA[<p><em>一直想自己搭建一个blog，但又因购买域名和租用服务器之麻烦没有实现。最近看到github上推出了github page服务，于是跃跃欲试。之前对git和markdown比较熟悉，所以搭建起来也没什么困难。好吧，总算是个良好的开始。</em></p>

<!--more-->


<h2>github pages</h2>

<p><img src="https://pages.github.com/favicon.ico" alt="github" /><br/>
<code>github pages</code>可以用git托管blog的静态网页，还可以自定义域名。</p>

<h3>创建主页</h3>

<h4>创建个人/组织主页</h4>

<p>创建新的仓库，并以<em>username</em>.github.io命名，<em>username</em>是你在github上的用户/组织名。<br/>
<code>git clone https://github.com/username/username.github.io</code></p>

<h4>创建项目主页</h4>

<p>项目主页的创建只需要创建一个新的名为<code>gh-pages</code>的分支即可。
<strong>注</strong>: github提供了自动生成项目主页的方法，并提供了一些漂亮的模板可供选择。</p>

<p>参考: <a href="https://pages.github.com/">https://pages.github.com</a></p>

<h2>octopress</h2>

<p><img src="http://octopress.org/octopress-favicon.png" alt="octopress" /><br/>
octopress是基于Jekyll博客引擎的一个框架。官方定义为：<code>A blogging framework for hackers</code>，可以生成github pages的静态网页。
官方提供了详尽的<a href="http://octopress.org/docs/">文档</a>，这里只是记录配置的大致步骤。</p>

<h2>安装ruby &amp; git</h2>

<ul>
<li>ubuntu: apt-get install ruby git-core</li>
<li>archlinux: pacman -S ruby git</li>
</ul>


<h2>获取和安装Octopress</h2>

<p><code>
git clone git://github.com/imathis/octopress.git
cd octopress
</code></p>

<h3>安装octopress的依赖</h3>

<p><code>
gem install bundler
rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
bundle install
</code></p>

<h3>安装octopress的默认主题</h3>

<p><code>rake install</code></p>

<p><strong>注意:</strong> 我在archlinux上安装的时候因为本地的rake版本太新了，运行时出错。按照提示，在<code>rake install</code>前加上<code>bundle exec</code>前缀就能正常运行了。</p>

<h2>配置octopress</h2>

<p><code>octopress</code>的作者使得它的配置尽量的简单，大多数情况下只需要修改<code>_config.yml</code>和<code>Rakefile</code>就可以正常工作了。
<code>Rakefile</code>是blog部署相关的配置，除非使用<code>rsync</code>，否则不需要修改。</p>

<p><code>_config.yml</code>是<strong>jekyll</strong>的主要配置文件，<code>octopress</code>对其作了一些定制，其中有三大配置项：<code>Main Configs</code>， <code>Jekyll &amp; Plugins</code> 和 <code>3rd Party Settings</code>。
最基本的配置只需要修改<code>_config.yml</code>的以下字段就可以了：
<code>
url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
</code>
更多配置，请移步：<a href="http://octopress.org/docs/configuring/">Configuring Octopress</a></p>

<h2>将博客部署到github上</h2>

<h3>rake task for github pages</h3>

<p><code>rake setup_github_pages</code>
这个task会要求你输入github仓库的URL。如：<code>https://github.com/sudolee/sudolee.github.io.git</code>
这条命令将完成以下工作:</p>

<blockquote><p>要求你输入github pages的仓库url，并存储之。
将原来的octopress的git仓库重命名为<code>octopress</code>。
把你的github pages的仓库设置为默认的远程仓库<code>origin。
从当前分支</code>master<code>切换到</code>source<code>分支。
根据你的github pages仓库配置blog的url。
clone你的远程仓库到</code>_deploy`目录，用于部署你的blog。</p></blockquote>

<h3>生成静态网页</h3>

<ul>
<li>运行命令<code>rake generate</code>将以<code>source</code>为源，生成静态blog网页保存在<code>public</code>目录，并copy到目录<code>_deploy</code>。
<strong>注：</strong> 如果你使用了比较新的rake，可能会提示<em>在你的命令前加上前缀<code>bundle exec</code>以解决问题</em>。</li>
</ul>


<h3>提交新主页</h3>

<ul>
<li>现在你可以运行<code>rake deploy</code>将<code>_deploy</code>目录的内容提交到你的github仓库，提交后就可以展现新的blog。</li>
<li>运行<code>rake preview</code>命令，可以在本地浏览器<code>http://127.0.0.1:4000</code>预览呈现效果。</li>
</ul>


<h2>开始写blog</h2>

<p>博文必须存放在目录 <code>source/_posts</code>，并以Jekyll的命名方式<code>YYYY-MM-DD-post-title.markdown</code>。
octopress提供了一些rake task，用来以正确的命名格式创建新的博文，并附件一些有用的yaml元数据。语法如下：
<code>rake new_post["title"]</code>
<code>title</code>是博文的主题，<code>new_post</code>会创建一个包含这个主题的文件。默认的扩展名是<code>markdown</code>，可以在<code>Rakefile</code>里配置不同的扩展名。
例如：
<code>rake new_post["用github pages和octopress部署blog"]</code>
运行这条命令将会在生成博文源文件：<code>source/_posts/2014-04-20-yong-github-pageshe-octopressbu-shu-blog.markdown</code></p>

<p>打开这个文件，可以看到像下面这样的yaml元数据(告诉jekyll博客引擎如何处理博文和页面)：</p>

<h2>```</h2>

<p>layout: post
title: &ldquo;用github pages和octopress部署blog&rdquo;
date: 2014-04-20 16:24:59 +0800
comments: true</p>

<h2>categories: </h2>

<p>```
编辑这个文件，就可以撰写博文。完成后用小节<strong>将博客部署到github上</strong>的方法部署或预览博文。</p>

<p>更多内容，请移步：<a href="http://octopress.org/docs/blogging">Blogging Basics</a></p>
]]></content>
  </entry>
  
</feed>
